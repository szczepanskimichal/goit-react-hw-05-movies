{"version":3,"file":"static/js/135.9dfa2567.chunk.js","mappings":"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","sources":["components/Cast/Cast.module.css","components/Cast/Cast.jsx","components/Loader/Loader.jsx","components/MovieList/MovieList.jsx","components/SharedLayout/SharedLayout.jsx","pages/MovieDetails/MovieDetails.module.css","pages/MovieDetails/MovieDetails.jsx","services/moviesAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getMoviesCast } from '../../services/moviesAPI';\nimport { Loader } from '../../components';\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n  const [movieCast, setMovieCast] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    (async () => {\n      setIsLoading(true);\n      try {\n        const data = await getMoviesCast(movieId);\n        setMovieCast(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [movieId]);\n\n  if (error) {\n    return alert('Something went wrong');\n  } else if (isLoading) {\n    return <Loader />;\n  } else if (movieCast.length === 0) {\n    return <p>Sorry, no information about movie cast</p>;\n  } else {\n    return (\n      <section>\n        <h3 className={css['Cast-header']}>Cast:</h3>\n        <ul className={css['Cast-item']}>\n          {movieCast.map(({ id, name, profile_path }) => (\n            <li key={id}>\n              <img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                    : 'https://dummyimage.com/300x450/000/fff&text=No+image'\n                }\n                width={200}\n                alt={name}\n              />\n              <p className={css['Cast-text']}>{name}</p>\n            </li>\n          ))}\n        </ul>\n      </section>\n    );\n  }\n};\n\nexport default Cast;\n","import { ColorRing } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <div>\n      <ColorRing\n        className=\"loader\"\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"blocks-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"blocks-wrapper\"\n        colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n// import css from \"./MovieList.module.css\";\n\nexport const MovieList = ({ movies }) => {\n  return (\n    <ul>\n      {movies.map(({ id, title }) => (\n        <li key={id}>\n          <Link to={`/movies/${id}`}>\n            <p>{title}</p>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React, { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\n\nimport { Link, Header, Container } from './SharedLayout.styled';\nimport { Loader } from 'components';\n\nconst SharedLayout = () => {\n  return (\n    <Container>\n      <Header>\n        <nav>\n          <Link to=\"\">Home</Link>\n          <Link to=\"/movies\">Movies</Link>\n        </nav>\n      </Header>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </Container>\n  );\n};\n\nexport default SharedLayout;\n","// extracted by mini-css-extract-plugin\nexport default {};","import React, { useState, useEffect } from 'react';\nimport { Link, Outlet, useParams, useLocation } from 'react-router-dom';\n\nimport { getMoviesById } from '../../services/moviesAPI';\nimport { Loader, BackLink } from '../../components';\nimport css from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  console.log('location', location);\n  const backLinkHref = location?.state?.from?.location ?? '/movies';\n\n  useEffect(() => {\n    (async () => {\n      setIsLoading(true);\n      try {\n        const data = await getMoviesById(movieId);\n        setMovieDetails(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [movieId]);\n\n  if (error) {\n    return alert('Something went wrong');\n  } else if (isLoading) {\n    return <Loader />;\n  } else if (!movieDetails) {\n    return <p>Sorry, no information about this movie</p>;\n  } else {\n    const { poster_path, title, release_date, vote_average, genres, overview } =\n      movieDetails;\n\n    console.log('movieDetails', movieDetails);\n\n    const genreNames = genres?.map(genre => genre.name);\n\n    return (\n      <main>\n        <BackLink to={backLinkHref}>Go back</BackLink>\n        <div className={css['MovieDEtails']}>\n          <img\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/original${poster_path}`\n                : 'https://dummyimage.com/300x450/000/fff&text=No+image'\n            }\n            width={300}\n            alt={title}\n          />\n          <div>\n            <h2 className={css['MovieDEtails-title']}>\n              {title} {parseInt(release_date)}{' '}\n            </h2>\n            <h3 className={css['MovieDEtails-header']}>\n              User Score: {vote_average}{' '}\n            </h3>\n            <div>\n              <h3>\n                Overview: <br />\n              </h3>\n              <p className={css['MovieDEtails-text']}>{overview}</p>\n            </div>\n            <div>\n              <h3>\n                Genres: <br />\n              </h3>\n              <p className={css['MovieDEtails-text']}>\n                {genreNames ? genreNames.join(', ') : 'No genres available'}\n              </p>\n            </div>\n          </div>\n        </div>\n        <div>\n          <h3>adidtional information</h3>\n          <ul>\n            <li>\n              <Link to=\"cast\">Cast</Link>\n            </li>\n            <li>\n              <Link to=\"reviews\">Reviews</Link>\n            </li>\n          </ul>\n        </div>\n        <Outlet />\n      </main>\n    );\n  }\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: '885aafdff1d2260624bec04a8d95bb64',\n};\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day`);\n  return response.data.results;\n};\n\nexport const getMoviesById = async movieId => {\n  const response = await axios.get(`movie/${movieId}`);\n  return response.data;\n};\n\nexport const getMoviesCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits`);\n  return response.data.cast;\n};\n\nexport const getMoviesReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews`);\n  return response.data.results;\n};\n\nexport const getMoviesByQuery = async (query = '') => {\n  const response = await axios.get(`search/movie?query=${query}`);\n  return response.data.results;\n};\n"],"names":["_useState","useState","_useState2","_slicedToArray","movieCast","setMovieCast","_useState3","_useState4","error","setError","_useState5","_useState6","isLoading","setIsLoading","movieId","useParams","useEffect","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","getMoviesCast","sent","t0","finish","stop","alert","_jsx","Loader","length","children","_jsxs","className","css","map","_ref2","id","name","profile_path","src","concat","width","alt","ColorRing","visible","height","ariaLabel","wrapperStyle","wrapperClass","colors","MovieList","_ref","movies","title","Link","to","Container","Header","Suspense","fallback","Outlet","_location$state$from$","_location$state","_location$state$from","movieDetails","setMovieDetails","location","useLocation","console","log","backLinkHref","state","from","getMoviesById","poster_path","release_date","vote_average","genres","overview","genreNames","genre","BackLink","parseInt","join","axios","api_key","_callee2","response","_context2","abrupt","_x","apply","arguments","_ref3","_callee3","_context3","cast","_x2","getMoviesByQuery","_ref5","_callee5","query","_args5","_context5","undefined","results"],"sourceRoot":""}